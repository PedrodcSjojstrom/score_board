{"version":3,"sources":["components/StopWatch.js","components/Header.js","components/Input.js","components/Crown.js","components/Player.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["StopWatch","state","isRunning","elapsedTime","previousTime","seconds","minutes","hours","handleStopwatch","setState","prevState","Date","now","handleReset","tick","secCounter","Math","floor","transform","parseInt","num","strNum","this","intervalID","setInterval","clearInterval","className","onClick","Component","Header","props","totalPlayers","totalPoints","Input","score","iScore","iPerson","handleScore","type","value","onChange","e","Crown","viewBox","isHighScore","d","width","height","Player","name","rScores","scoreSum","removePlayer","id","map","index","toString","Footer","playerInput","React","createRef","handleSubmit","preventDefault","addPlayer","current","currentTarget","reset","onSubmit","ref","placeholder","App","players","gameStage","prevPlayerId","handleScoreChange","scoresCopy","target","handleRemovePlayer","filter","p","handleAddPlayer","scores","total","i","length","getHighScore","totals","highScore","min","getTotalPoints","console","log","player","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3642b13d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass StopWatch extends Component {\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0,\n    seconds: \"00\",\n    minutes: \"00\",\n    hours: \"00\",\n  };\n\n  handleStopwatch = () => {\n    this.setState((prevState) => ({\n      isRunning: !prevState.isRunning,\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  };\n\n  handleReset = () => {\n    this.setState({\n      elapsedTime: 0,\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n    });\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n  componentWillUnmount() {\n    //this method is called when the component is about to unmount, is another lifecycle method\n    clearInterval(this.intervalID);\n    //clear Interval clears all functions set to repeat periodicly with setInterval\n    // this is done to prevent memori leaks, to prevent the function to continue to excecute after the component is unmounted\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      const secCounter = Math.floor(this.state.elapsedTime / 1000);\n      const seconds = this.transform(secCounter % 60);\n      const hours = this.transform(parseInt((secCounter/ 60)/60));\n      const minutes = this.transform(parseInt(secCounter / 60)-hours*60);\n\n      this.setState((prevState) => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime),\n        seconds: seconds,\n        minutes: minutes,\n        hours: hours,\n      }));\n    }\n  };\n\n  transform = (num) => {\n    let strNum = num + \"\";\n    if (num < 10) {\n      strNum = \"0\" + strNum;\n      return strNum;\n    } else {\n      return strNum;\n    }\n  };\n  render() {\n    return (\n      <div className=\"stopwatch\">\n        <h2>Stopwatch</h2>\n        <span className=\"stopwatch-time\">\n          {this.state.hours}:{this.state.minutes}:{this.state.seconds}\n        </span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default StopWatch;\n","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nimport StopWatch from \"./StopWatch\";\n\nclass Header extends Component {\n  static propTypes = {};\n  render() {\n    const {totalPlayers, totalPoints}= this.props;\n    return (\n      <header>\n        {/* <!-- Stats --> */}\n        <table className=\"stats\">\n          <tbody>\n            <tr>\n              <td>Players:</td>\n              <td>{totalPlayers}</td>\n            </tr>\n            <tr>\n              <td>Points:</td>\n              <td>{totalPoints}</td>\n            </tr>\n            {/* <tr>\n              <td>Round:</td>\n              <td>0</td>\n            </tr> */}\n          </tbody>\n        </table>\n        {/* <!-- Header text --> */}\n        <h1>Continental Scoreboard</h1>\n        {/* <!-- Timer --> */}\n        <StopWatch/>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\n\nclass Input extends Component {\n  static propTypes = {};\n\n  \n  render() {\n    const {score,iScore,iPerson,handleScore} = this.props;\n    return (\n      <input\n        type=\"number\"\n        className=\"round-score\"\n        value={score}\n        onChange={(e)=>handleScore(iPerson, iScore, e)}\n      ></input>\n    );\n  }\n}\n\nexport default Input;\n","import React from 'react'\n\nconst Crown = (props) => {\n    return (\n        <svg viewBox=\"0 0 44 35\" className={props.isHighScore ? 'is-high-score': null}>\n            <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\n            <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\n        </svg>\n    );\n}\n\nexport default Crown;","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\nimport Input from \"./Input\";\nimport Crown from \"./Crown\";\n\nclass Player extends Component {\n  static propTypes = {};\n  render() {\n    const {\n      name,\n      rScores,\n      handleScore,\n      scoreSum,\n      removePlayer,\n      id,\n      isHighScore,\n    } = this.props;\n    return (\n      <div className=\"player\">\n        <span className=\"player-name\">\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>\n            ✖\n          </button>\n          <Crown \n          isHighScore={isHighScore} \n          \n          />\n          {name}\n        </span>\n        {rScores.map((score, index) => (\n          <Input\n            score={score}\n            iScore={index}\n            iPerson={this.props.index}\n            handleScore={handleScore}\n            key={index.toString()}\n          />\n        ))}\n        <div className=\"player-total\">{scoreSum}</div>\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport PropType from \"prop-types\";\n\nclass Footer extends Component {\n  playerInput = React.createRef();\n  //create ref  \n\n  handleSubmit = (e) => {\n      e.preventDefault();\n      this.props.addPlayer(this.playerInput.current.value);\n      e.currentTarget.reset();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input \n        type=\"text\" \n        ref={this.playerInput}\n        //pass ref to the ref attribute \n        placeholder=\"Enter a player's name\" \n        />\n\n        <input type=\"submit\" value=\"Add player\" />\n      </form>\n    );\n  }\n}\n\nexport default Footer;\n","import React, {Component}  from 'react';\nimport \"./App.css\";\nimport Header from './components/Header';\nimport Player from './components/Player';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n\n  state = {\n    players: [],\n    gameStage:'',\n  }\n   prevPlayerId = 0;\n  handleScoreChange= (iPerson,iScore, e) =>{\n   /*  if(e.target.value.match(/^[0-9,-]+$/)) */\n    const scoresCopy= this.state.players[iPerson].rScores \n    scoresCopy[iScore]=e.target.value\n    this.setState({\n      rScores: scoresCopy\n    })\n  }\n  handleRemovePlayer = (id) => {\n    this.setState( prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  }\n\n  handleAddPlayer = (name) => {\n    this.setState(prevState =>{\n      return {\n        players: [\n        ...prevState.players,\n          {\n            name: name,\n            id: this.prevPlayerId += 1,\n            rScores:[0,0,0,0,0,0,0],\n\n          }\n        ]\n      }\n      \n    });\n  }\n\n  scoreSum = (scores)=> {\n    //just sum the array\n    let total =0;\n    for (let i=0;i<scores.length;i++){\n      total+=parseInt(scores[i]);\n    }\n    return total\n  }\n  getHighScore = () => {\n    let totals=[]\n    for (let i=0;i<this.state.players.length;i++){\n     totals=[...totals, this.scoreSum(this.state.players[i].rScores)]\n    }\n    const highScore = Math.min(...totals);\n    if (highScore) {\n      return highScore;\n    } \n    return null;\n  }\n  getTotalPoints = () =>{\n    let totals=[]\n    for (let i=0;i<this.state.players.length;i++){\n     totals=[...totals, this.scoreSum(this.state.players[i].rScores)]\n    }\n    return this.scoreSum(totals);\n  }\n\n  render () {\n    const highScore = this.getHighScore();\n    console.log(highScore)\n    return (\n      <div className=\"scoreboard\">\n        <Header\n        totalPlayers={this.state.players.length}\n        totalPoints={this.getTotalPoints()} \n        />\n        {this.state.players.map( (player, index) =>\n          <Player \n            name={player.name}\n            id={player.id}\n            key={player.id.toString()}\n            rScores={player.rScores}\n            index={index}\n            handleScore={this.handleScoreChange}\n            scoreSum={this.scoreSum(player.rScores)}\n            isHighScore={highScore===this.scoreSum(player.rScores)}\n            removePlayer={this.handleRemovePlayer}\n          />\n        )}\n        <Footer addPlayer={this.handleAddPlayer}/>\n        \n        \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}